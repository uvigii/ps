$Identity = "locked-out-user-name"
# No edit below this line 
$DCCounter = 0
$LockedOutStats = @()
$LockedOutEvents =@()
$LockedOutLocations = @()
Import-Module ActiveDirectory -ErrorAction Stop
#Get all domain controllers in domain
$DomainControllers = Get-ADDomainController -Filter *
$PDCEmulator = ($DomainControllers | Where-Object {$_.OperationMasterRoles -contains "PDCEmulator"})
Write-Verbose "Finding the domain controllers in the domain"
Foreach($DC in $DomainControllers)
        {
            $DCCounter++
            Write-Progress -Activity "Contacting DCs for lockout info" -Status "Querying $($DC.Hostname)" -PercentComplete (($DCCounter/$DomainControllers.Count) * 100)
            Try
            {
                $UserInfo = Get-ADUser -Identity $Identity  -Server $DC.Hostname -Properties AccountLockoutTime,LastBadPasswordAttempt,BadPwdCount,LockedOut -ErrorAction Stop
            }
            Catch
            {
                Write-Warning $_
                Continue
            }
            If($UserInfo.LastBadPasswordAttempt)
            {    
                $LockedOutStats += New-Object -TypeName PSObject -Property @{                       
                        Name                   = $UserInfo.SamAccountName;
                        SID                    = $UserInfo.SID.Value;
                        LockedOut              = $UserInfo.LockedOut;
                        BadPwdCount            = $UserInfo.BadPwdCount;
                        BadPasswordTime        = $UserInfo.BadPasswordTime;            
                        DomainController       = $DC.Hostname;
                        AccountLockoutTime     = $UserInfo.AccountLockoutTime;
                        LastBadPasswordAttempt = ($UserInfo.LastBadPasswordAttempt).ToLocalTime()
                    }          
           }#end if
           #Get User Info
           Try
           {             
                $LockedOutEvents += Get-WinEvent -ComputerName $DC.Hostname -FilterHashtable @{LogName='Security';Id=4740} -ErrorAction Stop | Sort-Object -Property TimeCreated -Descending
           }
           Catch 
           {          
                Write-Warning "$DC $_"
                Continue
           }#end catch  


}#end foreach DCs
$LockedOutStats | Format-Table -Property Name,LockedOut,DomainController,BadPwdCount,AccountLockoutTime,LastBadPasswordAttempt -AutoSize

Foreach($Event in $LockedOutEvents)
        {            
           If($Event | Where {$_.Properties[2].value -match $UserInfo.SID.Value})
           { 
              
              $Event | Select-Object -Property @(
                @{Label = 'User';               Expression = {$_.Properties[0].Value}}
                @{Label = 'DomainController';   Expression = {$_.MachineName}}
                @{Label = 'EventId';            Expression = {$_.Id}}
                @{Label = 'LockedOutTimeStamp'; Expression = {$_.TimeCreated}}
                @{Label = 'Message';            Expression = {$_.Message -split "`r" | Select -First 1}}
                @{Label = 'LockedOutLocation';  Expression = {$_.Properties[1].Value}}
              )
              $LockedOutLocations += New-Object -TypeName PSObject -Property @{ computername = $event.Properties[1].Value }
                                                
            }#end ifevent
            
}#end foreach lockedout event
